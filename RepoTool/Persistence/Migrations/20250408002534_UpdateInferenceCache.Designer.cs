// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepoTool.Persistence;

#nullable disable

namespace RepoTool.Persistence.Migrations
{
    [DbContext(typeof(RepoToolDbContext))]
    [Migration("20250408002534_UpdateInferenceCache")]
    partial class UpdateInferenceCache
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("RepoTool.Persistence.Entities.ChangelogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("LastModifiedAt");

                    b.ToTable("Changelogs");
                });

            modelBuilder.Entity("RepoTool.Persistence.Entities.InferenceCacheEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("InferenceModel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("InferenceProvider")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("OutputType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PromptHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ResponseContent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("InferenceProvider");

                    b.HasIndex("LastModifiedAt");

                    b.HasIndex("OutputType");

                    b.HasIndex("PromptHash");

                    b.HasIndex("PromptHash", "OutputType", "InferenceProvider")
                        .IsUnique();

                    b.ToTable("InferenceCache");
                });

            modelBuilder.Entity("RepoTool.Persistence.Entities.LanguageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("LastModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Patterns")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("LastModifiedAt");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("RepoTool.Persistence.Entities.ParsedFileEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("FileHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .HasColumnType("TEXT");

                    b.Property<int>("LanguageId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("ParsedFile")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("FileHash");

                    b.HasIndex("FilePath");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("LanguageId");

                    b.HasIndex("LastModifiedAt");

                    b.HasIndex("FilePath", "FileHash")
                        .IsUnique();

                    b.ToTable("ParsedFiles");
                });

            modelBuilder.Entity("RepoTool.Persistence.Entities.ChangelogEntity", b =>
                {
                    b.OwnsMany("RepoTool.Persistence.Entities.Change", "Changes", b1 =>
                        {
                            b1.Property<int>("ChangelogEntityId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("__synthesizedOrdinal")
                                .ValueGeneratedOnAddOrUpdate()
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Area")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<int>("Importance")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("PerformanceImpact")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Quality")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Reason")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<int>("Size")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Specialization")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("TechnicalDebt")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Type")
                                .HasColumnType("INTEGER");

                            b1.HasKey("ChangelogEntityId", "__synthesizedOrdinal");

                            b1.ToTable("Changelogs");

                            b1.ToJson("Changes");

                            b1.WithOwner()
                                .HasForeignKey("ChangelogEntityId");
                        });

                    b.Navigation("Changes");
                });

            modelBuilder.Entity("RepoTool.Persistence.Entities.ParsedFileEntity", b =>
                {
                    b.HasOne("RepoTool.Persistence.Entities.LanguageEntity", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Language");
                });
#pragma warning restore 612, 618
        }
    }
}
